import java.lang.Boolean;
import kotlin.collections.Map;

CREATE TABLE SessionDao(
   id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
   topic TEXT UNIQUE NOT NULL,
   pairingTopic TEXT NOT NULL,
   expiry INTEGER NOT NULL,
   relay_protocol TEXT NOT NULL,
   relay_data TEXT,
   controller_key TEXT,
   self_participant TEXT NOT NULL,
   peer_participant TEXT,
   is_acknowledged INTEGER AS Boolean NOT NULL,
   properties TEXT AS Map<String, String>
);

insertOrAbortSession:
INSERT OR ABORT INTO SessionDao(topic, pairingTopic, expiry, relay_protocol, relay_data, controller_key, self_participant, peer_participant, is_acknowledged, properties)
VALUES (?,  ?, ?,?, ?, ?, ?, ?, ?, ?);

lastInsertedRow:
SELECT id
FROM SessionDao
WHERE id = (SELECT MAX(id) FROM SessionDao);

getListOfSessionDaos:
SELECT sd.id, sd.topic, sd.expiry, sd.relay_protocol, sd.relay_data, sd.controller_key, sd.self_participant, sd.peer_participant, sd.is_acknowledged, sd.pairingTopic, sd.properties
FROM SessionDao sd;

getSessionByTopic:
SELECT sd.id, sd.topic, sd.expiry, sd.relay_protocol, sd.relay_data, sd.controller_key, sd.self_participant, sd.peer_participant, sd.is_acknowledged, sd.pairingTopic, sd.properties
FROM SessionDao sd
WHERE topic = ?;

getSessionIdByTopic:
SELECT id
FROM SessionDao
WHERE topic = ?;

getAllSessionTopicsByPairingTopic:
SELECT topic
FROM SessionDao
WHERE pairingTopic = ?;

acknowledgeSession:
UPDATE OR ABORT SessionDao
SET is_acknowledged = ?
WHERE topic = ?;

updateSessionExpiry:
UPDATE OR ABORT SessionDao
SET expiry = ?
WHERE topic = ?;

deleteSession:
DELETE FROM SessionDao
WHERE topic = ?;

hasTopic:
SELECT topic
FROM SessionDao
WHERE ? = topic;

getExpiry:
SELECT expiry
FROM SessionDao
WHERE ? = topic;