[versions]
core = "1.6.1"
jerseyCommon = "3.1.6"
kotlin = "1.9.24"
kotlinxCoroutinesTest = "1.5.2"
ksp = "1.9.24-1.0.20"
agp = "8.4.1"

minSdk = "23"
mockkAndroid = "1.12.0"
targetSdk = "34"
compileSdk = "34"

composeCompiler = "1.5.14"
composeBOM = "2024.05.00"
composeViewModel = "2.8.0"
accompanist = "0.34.0"

coroutines = "1.8.1"
sqlDelight = "2.0.2"
dokka = "1.9.20"
moshi = "1.15.1"
googleService = "4.4.1"
scarlet = "1.0.2"
koin = "3.5.6"
retrofit = "2.11.0"
okhttp = "4.12.0"
bouncyCastle = "1.78.1"
sqlCipher = "4.5.4"
multibase = "1.1.1"
json = "20220924"
timber = "5.0.1"
web3j = "4.9.8-hotfix"
kethereum = "0.86.0"
relinker = "1.4.5"
coil = "2.6.0"
customQrGenerator = "1.6.2"
beagle = "2.9.0"
coinbase = "1.0.4"

firebaseBOM = "33.0.0"
firebaseAppDistribution = "5.0.0"

androidxCore = "1.13.1"
androidxAppCompat = "1.6.1"
andoridxMaterial = "1.12.0"
androidxLifecycle = "2.8.0"
androidxTest = "1.5.0"
androidxTestOrchestration = "1.4.2"
androidxSecurity = "1.1.0-alpha06"
androidxDatastore = "1.1.1"
androidxNavigation = "2.7.7"

jUnit = "4.13.2"
robolectric = "4.12.2"
mockk = "1.13.11"
turbine = "1.1.0"
paparazzi = "1.3.4"

[libraries]
core = { module = "androidx.test:core", version.ref = "core" }
kotlinx-coroutines-test-v152 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockkAndroid" }
sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }
sqlDelight-test = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-async = { module = "app.cash.sqldelight:async-extensions", version.ref = "sqlDelight" }
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version = "3.8.10.2" }

androidx-lifecycleLiveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-navigationFragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidxNavigation" }
androidx-navigationUi = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidxNavigation" }
androidx-security = { module = "androidx.security:security-crypto-ktx", version.ref = "androidxSecurity" }
androidx-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDatastore" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppCompat" }
androidx-material = { module = "com.google.android.material:material", version.ref = "andoridxMaterial" }
androidx-testJunit = { module = "androidx.test.ext:junit-ktx", version = "1.1.5" }
androidx-testCore = { module = "androidx.test:core-ktx", version.ref = "androidxTest" }
androidx-testOrchestrator = { module = "androidx.test:orchestrator", version.ref = "androidxTestOrchestration" }
androidx-testRunner = { module = "androidx.test:runner", version = "1.5.2" }
androidx-testRules = { module = "androidx.test:rules", version.ref = "androidxTest" }
#-------------------------- Compose --------------------------
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBOM" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-test-junit = { module = "androidx.compose.ui:ui-test-junit4", version = "1.6.7" }
androidx-compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }
androidx-compose-navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "androidxNavigation" }
androidx-compose-lifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeViewModel" }
androidx-compose-material = { module = "androidx.compose.material:material", version = "1.6.7" }

coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

scarlet = { module = "com.walletconnect.Scarlet:scarlet", version.ref = "scarlet" }
scarlet-okhttp = { module = "com.walletconnect.Scarlet:websocket-okhttp", version.ref = "scarlet" }
scarlet-coroutines = { module = "com.walletconnect.Scarlet:stream-adapter-coroutines", version.ref = "scarlet" }
scarlet-moshi = { module = "com.walletconnect.Scarlet:message-adapter-moshi", version.ref = "scarlet" }
scarlet-android = { module = "com.walletconnect.Scarlet:lifecycle-android", version.ref = "scarlet" }
scarlet-mockwebserver = { module = "com.walletconnect.Scarlet:websocket-mockwebserver", version.ref = "scarlet" }
scarlet-testUtils = { module = "com.walletconnect.Scarlet:test-utils", version.ref = "scarlet" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-ksp = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor" }

koin-jvm = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

jUnit = { module = "junit:junit", version.ref = "jUnit" }
jUnit-engine = { module = "org.junit.vintage:junit-vintage-engine", version = "5.10.0" }

kethereum-bip39 = { module = "com.github.komputing.kethereum:bip39", version.ref = "kethereum" }
kethereum-bip39-wordlist = { module = "com.github.komputing.kethereum:bip39_wordlist_en", version.ref = "kethereum" }
kethereum-bip32 = { module = "com.github.komputing.kethereum:bip32", version.ref = "kethereum" }
kethereum-model = { module = "com.github.komputing.kethereum:model", version.ref = "kethereum" }
kethereum-crypto = { module = "com.github.komputing.kethereum:crypto_impl_spongycastle", version.ref = "kethereum" }

beagle-uiView = { module = "io.github.pandulapeter.beagle:ui-view", version.ref = "beagle" }
beagle-log = { module = "io.github.pandulapeter.beagle:log", version.ref = "beagle" }
beagle-logCrash = { module = "io.github.pandulapeter.beagle:log-crash", version.ref = "beagle" }
beagle-logOkhttp = { module = "io.github.pandulapeter.beagle:log-okhttp", version.ref = "beagle" }

accompanist-drawablePainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanist-navigation-material = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanist" }
accompanist-navigation-animation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist-uiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompnaist-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBOM" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }

bouncyCastle = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncyCastle" }
sqlCipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "sqlCipher" }
relinker = { module = "com.getkeepsafe.relinker:relinker", version.ref = "relinker" }
mulitbase = { module = "com.github.multiformats:java-multibase", version.ref = "multibase" }
jerseyCommon = { module = "org.glassfish.jersey.core:jersey-common", version.ref = "jerseyCommon" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
json = { module = "org.json:json", version.ref = "json" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
web3jCrypto = { module = "org.web3j:crypto", version.ref = "web3j" }
coinbaseWallet = { module = "com.coinbase:coinbase-wallet-sdk", version.ref = "coinbase" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
qrCodeGenerator = { module = "com.github.alexzhirkevich:custom-qr-generator", version.ref = "customQrGenerator" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

[bundles]
sqlDelight = ["sqlDelight-android", "sqlDelight-coroutines", "sqlDelight-adapters", "sqlDelight-async"]
sqlDelight-test = ["sqlDelight-test", "sqlite-jdbc"]

androidxLifecycle = ["androidx-lifecycleLiveData", "androidx-lifecycleViewModel", "androidx-lifecycleRuntime"]
androidxNavigation = ["androidx-navigationFragment", "androidx-navigationUi"]
androidxTest = ["androidx-testJunit", "androidx-testCore"]
androidxAndroidTest = ["androidx-testCore", "androidx-testRunner", "androidx-testRules"]
androidxAppCompat = ["androidx-appCompat", "androidx-core", "androidx-material"]

scarlet = ["scarlet", "scarlet-okhttp", "scarlet-coroutines", "scarlet-moshi"]
scarlet-test = ["scarlet-mockwebserver", "scarlet-testUtils"]

retrofit = ["retrofit", "retrofit-moshi"]
moshi = ["moshi-adapters", "moshi-kotlin"]
okhttp = ["okhttp", "okhttp-logging"]
kethereum = ["kethereum-bip39", "kethereum-bip39-wordlist", "kethereum-bip32", "kethereum-model", "kethereum-crypto"]
beagle = ["beagle-uiView", "beagle-log", "beagle-logCrash", "beagle-logOkhttp"]
accompanist = ["accompanist-drawablePainter", "accompanist-navigation-material", "accompanist-navigation-animation", "accompanist-uiController", "accompanist-pager", "accompnaist-pager-indicators"]
firebase = ["firebase-messaging", "firebase-crashlytics", "firebase-analytics"]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

dokka-core = { id = "org.jetbrains.dokka:dokka-core", version.ref = "dokka" }
dokka-gradle = { id = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

firebase-crashlytics = { id = "com.google.firebase.crashlytics", version = "3.0.1" }
firebase-distribution = { id = "com.google.firebase.appdistribution", version.ref = "firebaseAppDistribution" }

google-services = { id = "com.google.gms.google-services", version.ref = "googleService" }
google-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

javaLibrary = { id = "org.gradle.java-library" }

sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
sonarqube = { id = "org.sonarqube", version = "4.4.1.3373" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version = "2.0.0" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
